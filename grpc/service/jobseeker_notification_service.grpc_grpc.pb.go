// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package service

import (
	context "context"
	domain "github.com/wanpng/notification-grpc/grpc/domain"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// JobseekerNotificationServiceClient is the client API for JobseekerNotificationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type JobseekerNotificationServiceClient interface {
	NotifyInvitation(ctx context.Context, in *domain.InvitationRequest, opts ...grpc.CallOption) (*NotifyJobseekerInvitationResponse, error)
	NotifyApplicationStatusChange(ctx context.Context, in *NotifyApplicationStatusChangeRequest, opts ...grpc.CallOption) (*NotifyApplicationStatusChangeResponse, error)
	NotifyInterviewSchedule(ctx context.Context, in *domain.JobseekerInterviewSchedule, opts ...grpc.CallOption) (*NotifyJobseekerInterviewScheduleResponse, error)
	NotifyInterviewScheduleUpdated(ctx context.Context, in *domain.JobseekerInterviewSchedule, opts ...grpc.CallOption) (*NotifyJobseekerInterviewScheduleResponse, error)
	NotifyInterviewScheduleDeleted(ctx context.Context, in *NotifyInterviewScheduleDeletedRequest, opts ...grpc.CallOption) (*NotifyInterviewScheduleDeletedResponse, error)
}

type jobseekerNotificationServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewJobseekerNotificationServiceClient(cc grpc.ClientConnInterface) JobseekerNotificationServiceClient {
	return &jobseekerNotificationServiceClient{cc}
}

func (c *jobseekerNotificationServiceClient) NotifyInvitation(ctx context.Context, in *domain.InvitationRequest, opts ...grpc.CallOption) (*NotifyJobseekerInvitationResponse, error) {
	out := new(NotifyJobseekerInvitationResponse)
	err := c.cc.Invoke(ctx, "/protos.service.JobseekerNotificationService/NotifyInvitation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobseekerNotificationServiceClient) NotifyApplicationStatusChange(ctx context.Context, in *NotifyApplicationStatusChangeRequest, opts ...grpc.CallOption) (*NotifyApplicationStatusChangeResponse, error) {
	out := new(NotifyApplicationStatusChangeResponse)
	err := c.cc.Invoke(ctx, "/protos.service.JobseekerNotificationService/NotifyApplicationStatusChange", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobseekerNotificationServiceClient) NotifyInterviewSchedule(ctx context.Context, in *domain.JobseekerInterviewSchedule, opts ...grpc.CallOption) (*NotifyJobseekerInterviewScheduleResponse, error) {
	out := new(NotifyJobseekerInterviewScheduleResponse)
	err := c.cc.Invoke(ctx, "/protos.service.JobseekerNotificationService/NotifyInterviewSchedule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobseekerNotificationServiceClient) NotifyInterviewScheduleUpdated(ctx context.Context, in *domain.JobseekerInterviewSchedule, opts ...grpc.CallOption) (*NotifyJobseekerInterviewScheduleResponse, error) {
	out := new(NotifyJobseekerInterviewScheduleResponse)
	err := c.cc.Invoke(ctx, "/protos.service.JobseekerNotificationService/NotifyInterviewScheduleUpdated", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobseekerNotificationServiceClient) NotifyInterviewScheduleDeleted(ctx context.Context, in *NotifyInterviewScheduleDeletedRequest, opts ...grpc.CallOption) (*NotifyInterviewScheduleDeletedResponse, error) {
	out := new(NotifyInterviewScheduleDeletedResponse)
	err := c.cc.Invoke(ctx, "/protos.service.JobseekerNotificationService/NotifyInterviewScheduleDeleted", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// JobseekerNotificationServiceServer is the server API for JobseekerNotificationService service.
// All implementations must embed UnimplementedJobseekerNotificationServiceServer
// for forward compatibility
type JobseekerNotificationServiceServer interface {
	NotifyInvitation(context.Context, *domain.InvitationRequest) (*NotifyJobseekerInvitationResponse, error)
	NotifyApplicationStatusChange(context.Context, *NotifyApplicationStatusChangeRequest) (*NotifyApplicationStatusChangeResponse, error)
	NotifyInterviewSchedule(context.Context, *domain.JobseekerInterviewSchedule) (*NotifyJobseekerInterviewScheduleResponse, error)
	NotifyInterviewScheduleUpdated(context.Context, *domain.JobseekerInterviewSchedule) (*NotifyJobseekerInterviewScheduleResponse, error)
	NotifyInterviewScheduleDeleted(context.Context, *NotifyInterviewScheduleDeletedRequest) (*NotifyInterviewScheduleDeletedResponse, error)
	mustEmbedUnimplementedJobseekerNotificationServiceServer()
}

// UnimplementedJobseekerNotificationServiceServer must be embedded to have forward compatible implementations.
type UnimplementedJobseekerNotificationServiceServer struct {
}

func (UnimplementedJobseekerNotificationServiceServer) NotifyInvitation(context.Context, *domain.InvitationRequest) (*NotifyJobseekerInvitationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NotifyInvitation not implemented")
}
func (UnimplementedJobseekerNotificationServiceServer) NotifyApplicationStatusChange(context.Context, *NotifyApplicationStatusChangeRequest) (*NotifyApplicationStatusChangeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NotifyApplicationStatusChange not implemented")
}
func (UnimplementedJobseekerNotificationServiceServer) NotifyInterviewSchedule(context.Context, *domain.JobseekerInterviewSchedule) (*NotifyJobseekerInterviewScheduleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NotifyInterviewSchedule not implemented")
}
func (UnimplementedJobseekerNotificationServiceServer) NotifyInterviewScheduleUpdated(context.Context, *domain.JobseekerInterviewSchedule) (*NotifyJobseekerInterviewScheduleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NotifyInterviewScheduleUpdated not implemented")
}
func (UnimplementedJobseekerNotificationServiceServer) NotifyInterviewScheduleDeleted(context.Context, *NotifyInterviewScheduleDeletedRequest) (*NotifyInterviewScheduleDeletedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NotifyInterviewScheduleDeleted not implemented")
}
func (UnimplementedJobseekerNotificationServiceServer) mustEmbedUnimplementedJobseekerNotificationServiceServer() {
}

// UnsafeJobseekerNotificationServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to JobseekerNotificationServiceServer will
// result in compilation errors.
type UnsafeJobseekerNotificationServiceServer interface {
	mustEmbedUnimplementedJobseekerNotificationServiceServer()
}

func RegisterJobseekerNotificationServiceServer(s grpc.ServiceRegistrar, srv JobseekerNotificationServiceServer) {
	s.RegisterService(&JobseekerNotificationService_ServiceDesc, srv)
}

func _JobseekerNotificationService_NotifyInvitation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(domain.InvitationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobseekerNotificationServiceServer).NotifyInvitation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.service.JobseekerNotificationService/NotifyInvitation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobseekerNotificationServiceServer).NotifyInvitation(ctx, req.(*domain.InvitationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobseekerNotificationService_NotifyApplicationStatusChange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NotifyApplicationStatusChangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobseekerNotificationServiceServer).NotifyApplicationStatusChange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.service.JobseekerNotificationService/NotifyApplicationStatusChange",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobseekerNotificationServiceServer).NotifyApplicationStatusChange(ctx, req.(*NotifyApplicationStatusChangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobseekerNotificationService_NotifyInterviewSchedule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(domain.JobseekerInterviewSchedule)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobseekerNotificationServiceServer).NotifyInterviewSchedule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.service.JobseekerNotificationService/NotifyInterviewSchedule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobseekerNotificationServiceServer).NotifyInterviewSchedule(ctx, req.(*domain.JobseekerInterviewSchedule))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobseekerNotificationService_NotifyInterviewScheduleUpdated_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(domain.JobseekerInterviewSchedule)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobseekerNotificationServiceServer).NotifyInterviewScheduleUpdated(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.service.JobseekerNotificationService/NotifyInterviewScheduleUpdated",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobseekerNotificationServiceServer).NotifyInterviewScheduleUpdated(ctx, req.(*domain.JobseekerInterviewSchedule))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobseekerNotificationService_NotifyInterviewScheduleDeleted_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NotifyInterviewScheduleDeletedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobseekerNotificationServiceServer).NotifyInterviewScheduleDeleted(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.service.JobseekerNotificationService/NotifyInterviewScheduleDeleted",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobseekerNotificationServiceServer).NotifyInterviewScheduleDeleted(ctx, req.(*NotifyInterviewScheduleDeletedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// JobseekerNotificationService_ServiceDesc is the grpc.ServiceDesc for JobseekerNotificationService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var JobseekerNotificationService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "protos.service.JobseekerNotificationService",
	HandlerType: (*JobseekerNotificationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NotifyInvitation",
			Handler:    _JobseekerNotificationService_NotifyInvitation_Handler,
		},
		{
			MethodName: "NotifyApplicationStatusChange",
			Handler:    _JobseekerNotificationService_NotifyApplicationStatusChange_Handler,
		},
		{
			MethodName: "NotifyInterviewSchedule",
			Handler:    _JobseekerNotificationService_NotifyInterviewSchedule_Handler,
		},
		{
			MethodName: "NotifyInterviewScheduleUpdated",
			Handler:    _JobseekerNotificationService_NotifyInterviewScheduleUpdated_Handler,
		},
		{
			MethodName: "NotifyInterviewScheduleDeleted",
			Handler:    _JobseekerNotificationService_NotifyInterviewScheduleDeleted_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos/service/jobseeker_notification_service.grpc.proto",
}
